version: '3.0'

services:
    nginx_reverse_proxy:
        build:
            context: dockerfiles/nginx/reverse-proxy
            args:
                - DNS_API=${DNS_API:-api.anatroc}
                - DNS_FRONT=${DNS_FRONT:-front.anatroc}
        ports:
            - "443:443"
            - "80:80"
        networks:
            static-network:
                ipv4_address: 172.45.0.10
        restart: always

    nginx_php:
        build:
            context: ./HackatonItAnatrocApi/dockerfiles/nginx/php
            args:
                - DNS_API=${DNS_API:-api.antroc}
        volumes:
            - ./HackatonItAnatrocApi/app:/usr/share/nginx/html
        links:
            - php
        depends_on:
            - php
        networks:
            static-network:

    php:
        build:
            context: ./HackatonItAnatrocApi/dockerfiles/php
            args:
                - USER=${USER}
                - USER_GID=${USER_GID:-1000}
                - USER_UID=${USER_GID:-1000}
        volumes:
            - ./HackatonItAnatrocApi/app:/usr/share/nginx/html
        links:
            - mysql
        depends_on:
            - mysql
        networks:
            static-network:

    mysql:
        image: mysql:5.7
        volumes:
            - mysql-data:/var/lib/mysql
        environment:
            - MYSQL_ROOT_PASSWORD=root
        networks:
            static-network:

    nginx_node:
        build:
            context: ./AnatrocFrontEnd/dockerfiles/nginx/node
            args:
                - DNS_FRONT=${DNS_FRONT:-front.anatroc}
        volumes:
            - ./AnatrocFrontEnd/app:/usr/share/nginx/html
        depends_on:
            - node
        links:
            - node
        networks:
            static-network:

    node:
        build:
            context: ./AnatrocFrontEnd/dockerfiles/node
            args:
                - USER=${USER}
                - USER_GID=${USER_GID:-1000}
                - USER_UID=${USER_GID:-1000}
        volumes:
            - ./AnatrocFrontEnd/app:/app
        links:
            - nginx_reverse_proxy
        networks:
            static-network:

networks:
    static-network:
        ipam:
            config:
                - subnet: 172.45.0.0/24

volumes:
    mysql-data: